import{_ as a,c as e,o as t,V as r}from"./chunks/framework.Sh1CwOYD.js";const k=JSON.parse('{"title":"Task","description":"","frontmatter":{},"headers":[],"relativePath":"research/benchmark/task/index.md","filePath":"research/benchmark/task/index.md","lastUpdated":1707784745000}'),s={name:"research/benchmark/task/index.md"},n=r('<h1 id="task" tabindex="-1">Task <a class="header-anchor" href="#task" aria-label="Permalink to &quot;Task&quot;">​</a></h1><p>WebAssemblyバイナリコードをインタプリタで実行するため， 従来のC/C++からコンパイラによりバイナリを生成するアプローチと比べて 実行時間</p><h2 id="素数判定-平方根-余りの測定" tabindex="-1">素数判定(平方根，余りの測定) <a class="header-anchor" href="#素数判定-平方根-余りの測定" aria-label="Permalink to &quot;素数判定(平方根，余りの測定)&quot;">​</a></h2><p>素数判定(平方根の計算，あまりの計算，比較)</p><p><a href="./prime">prime</a></p><h2 id="竹内関数-関数呼び出し速度の測定" tabindex="-1">竹内関数(関数呼び出し速度の測定) <a class="header-anchor" href="#竹内関数-関数呼び出し速度の測定" aria-label="Permalink to &quot;竹内関数(関数呼び出し速度の測定)&quot;">​</a></h2><p>関数呼び出しが極めて多い計算． 比較演算と減算のみ．</p>',7),o=[n];function c(i,d,h,_,l,p){return t(),e("div",null,o)}const f=a(s,[["render",c]]);export{k as __pageData,f as default};
