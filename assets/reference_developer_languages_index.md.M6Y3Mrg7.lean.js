import{_ as n,D as o,o as s,c as l,k as e,a,I as r,R as i}from"./chunks/framework.OBNbGUgv.js";const Te=JSON.parse('{"title":"Support Languages","description":"","frontmatter":{},"headers":[],"relativePath":"reference/developer/languages/index.md","filePath":"reference/developer/languages/index.md","lastUpdated":1704004113000}'),d={name:"reference/developer/languages/index.md"},h=i("",8),c={id:"arduino-compatibility",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#arduino-compatibility","aria-label":'Permalink to "Arduino Compatibility <Badge type="tip" text="partial support" />"'},"​",-1),_=e("p",null,[a("See : "),e("a",{href:"https://www.arduino.cc/reference/en/",target:"_blank",rel:"noreferrer"},"https://www.arduino.cc/reference/en/")],-1),u={id:"digital-i-o",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#digital-i-o","aria-label":'Permalink to "Digital I/O <Badge type="tip" text="experimental" />"'},"​",-1),b=i("",4),g={id:"analog-i-o",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#analog-i-o","aria-label":'Permalink to "Analog I/O <Badge type="tip" text="experimental" />"'},"​",-1),y=e("h4",{id:"analogread",tabindex:"-1"},[a("analogRead() "),e("a",{class:"header-anchor",href:"#analogread","aria-label":'Permalink to "analogRead()"'},"​")],-1),f={id:"analogreference",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#analogreference","aria-label":'Permalink to "analogReference() <Badge type="warning" text="yet" />"'},"​",-1),P=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"マイコンによって定数が変化するため，一旦実装を保留")],-1),q=e("h4",{id:"analogwrite",tabindex:"-1"},[a("analogWrite() "),e("a",{class:"header-anchor",href:"#analogwrite","aria-label":'Permalink to "analogWrite()"'},"​")],-1),w=e("hr",null,null,-1),T={id:"zero-due-mkr-family",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#zero-due-mkr-family","aria-label":'Permalink to "Zero, Due & MKR Family <Badge type="danger" text="not support" />"'},"​",-1),S=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"一部マイコン限定なので，サポートは一旦見送る(後ほどライブラリとしての追加はあり)")],-1),A=e("hr",null,null,-1),N={id:"advanced-i-o",tabindex:"-1"},R=e("a",{class:"header-anchor",href:"#advanced-i-o","aria-label":'Permalink to "Advanced I/O <Badge type="warning" text="yet" />"'},"​",-1),B=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"一旦保留")],-1),C=e("hr",null,null,-1),v={id:"time",tabindex:"-1"},W=e("a",{class:"header-anchor",href:"#time","aria-label":'Permalink to "Time <Badge type="tip" text="experimental" />"'},"​",-1),V=i("",16),D={id:"trigonometry",tabindex:"-1"},G=e("a",{class:"header-anchor",href:"#trigonometry","aria-label":'Permalink to "Trigonometry <Badge type="tip" text="experimental" />"'},"​",-1),M=i("",5),j={id:"characters",tabindex:"-1"},E=e("a",{class:"header-anchor",href:"#characters","aria-label":'Permalink to "Characters <Badge type="warning" text="yet" />"'},"​",-1),L=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"すべて実装必要？")],-1),O=e("hr",null,null,-1),z={id:"rundom-numbers",tabindex:"-1"},$=e("a",{class:"header-anchor",href:"#rundom-numbers","aria-label":'Permalink to "Rundom Numbers <Badge type="tip" text="experimental" />"'},"​",-1),F=e("h4",{id:"rundom",tabindex:"-1"},[a("rundom() "),e("a",{class:"header-anchor",href:"#rundom","aria-label":'Permalink to "rundom()"'},"​")],-1),U=e("h4",{id:"rundomseed",tabindex:"-1"},[a("rundomSeed() "),e("a",{class:"header-anchor",href:"#rundomseed","aria-label":'Permalink to "rundomSeed()"'},"​")],-1),Y=e("hr",null,null,-1),Z={id:"bits-and-bytes",tabindex:"-1"},K=e("a",{class:"header-anchor",href:"#bits-and-bytes","aria-label":'Permalink to "Bits and Bytes <Badge type="warning" text="yet" />"'},"​",-1),J=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"WebAssembly側で関数作るのと関数呼び出しするのではどっちが早いか測定する必要がありそう。 ポインタ的な使い方ができないのに，これ実装できる？？")],-1),H=e("hr",null,null,-1),Q={id:"external-interrupts",tabindex:"-1"},X=e("a",{class:"header-anchor",href:"#external-interrupts","aria-label":'Permalink to "External Interrupts <Badge type="warning" text="yet" />"'},"​",-1),ee=i("",4),ae={id:"interrupts",tabindex:"-1"},te=e("a",{class:"header-anchor",href:"#interrupts","aria-label":'Permalink to "Interrupts <Badge type="warning" text="yet" />"'},"​",-1),re=e("h4",{id:"interrupts-1",tabindex:"-1"},[a("interrupts() "),e("a",{class:"header-anchor",href:"#interrupts-1","aria-label":'Permalink to "interrupts()"'},"​")],-1),ie=e("h4",{id:"nointerrupts",tabindex:"-1"},[a("noInterrupts() "),e("a",{class:"header-anchor",href:"#nointerrupts","aria-label":'Permalink to "noInterrupts()"'},"​")],-1),ne=e("hr",null,null,-1),oe={id:"communication",tabindex:"-1"},se=e("a",{class:"header-anchor",href:"#communication","aria-label":'Permalink to "Communication <Badge type="warning" text="yet" />"'},"​",-1),le=i("",6),de={id:"usb",tabindex:"-1"},he=e("a",{class:"header-anchor",href:"#usb","aria-label":'Permalink to "USB <Badge type="danger" text="not support" />"'},"​",-1),ce={id:"network",tabindex:"-1"},pe=e("a",{class:"header-anchor",href:"#network","aria-label":'Permalink to "Network <Badge type="warning" text="yet" />"'},"​",-1),_e=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"RP2040とESP32のWiFi関連のAPIを参考にしたい")],-1),ue={id:"display",tabindex:"-1"},me=e("a",{class:"header-anchor",href:"#display","aria-label":'Permalink to "Display <Badge type="warning" text="yet" />"'},"​",-1),be=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"WARNING"),e("p",null,"M5Stack系のマイコンのLCDを抽象化したい")],-1);function ge(xe,ye,fe,ke,Pe,qe){const t=o("Badge");return s(),l("div",null,[h,e("h2",c,[a("Arduino Compatibility "),r(t,{type:"tip",text:"partial support"}),a(),p]),_,e("h3",u,[a("Digital I/O "),r(t,{type:"tip",text:"experimental"}),a(),m]),b,e("h3",g,[a("Analog I/O "),r(t,{type:"tip",text:"experimental"}),a(),x]),y,e("h4",f,[a("analogReference() "),r(t,{type:"warning",text:"yet"}),a(),k]),P,q,w,e("h3",T,[a("Zero, Due & MKR Family "),r(t,{type:"danger",text:"not support"}),a(),I]),S,A,e("h3",N,[a("Advanced I/O "),r(t,{type:"warning",text:"yet"}),a(),R]),B,C,e("h3",v,[a("Time "),r(t,{type:"tip",text:"experimental"}),a(),W]),V,e("h3",D,[a("Trigonometry "),r(t,{type:"tip",text:"experimental"}),a(),G]),M,e("h3",j,[a("Characters "),r(t,{type:"warning",text:"yet"}),a(),E]),L,O,e("h3",z,[a("Rundom Numbers "),r(t,{type:"tip",text:"experimental"}),a(),$]),F,U,Y,e("h3",Z,[a("Bits and Bytes "),r(t,{type:"warning",text:"yet"}),a(),K]),J,H,e("h3",Q,[a("External Interrupts "),r(t,{type:"warning",text:"yet"}),a(),X]),ee,e("h3",ae,[a("Interrupts "),r(t,{type:"warning",text:"yet"}),a(),te]),re,ie,ne,e("h3",oe,[a("Communication "),r(t,{type:"warning",text:"yet"}),a(),se]),le,e("h3",de,[a("USB "),r(t,{type:"danger",text:"not support"}),a(),he]),e("h2",ce,[a("Network "),r(t,{type:"warning",text:"yet"}),a(),pe]),_e,e("h2",ue,[a("Display "),r(t,{type:"warning",text:"yet"}),a(),me]),be])}const Ie=n(d,[["render",ge]]);export{Te as __pageData,Ie as default};
